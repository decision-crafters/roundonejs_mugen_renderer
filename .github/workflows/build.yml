name: Build and UI Test

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x, 18.x, 20.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Test
      run: npm test || echo "No tests available, skipping"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files-${{ matrix.node-version }}
        path: dist/
        
  ui-test:
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Install Playwright
      run: npx playwright install --with-deps chromium
    
    - name: Start HTTP server
      run: npx http-server -p 8080 &
      
    - name: Wait for server to start
      run: sleep 5
    
    - name: Create UI test script
      run: |
        cat > ui-test.js << 'EOL'
        const { chromium } = require('playwright');

        (async () => {
          const browser = await chromium.launch();
          const page = await browser.newPage();
          
          try {
            console.log('Testing demo page loading...');
            await page.goto('http://localhost:8080/src/demo/index.html');
            await page.waitForSelector('h1:has-text("RoundOneJS MUGEN RENDERER")');
            console.log('✅ Demo page loaded successfully');
            
            console.log('Testing UI elements...');
            const title = await page.textContent('h1');
            console.log(`Page title: ${title}`);
            
            const playerElements = await page.$$('div:has-text("Player")');
            console.log(`Found ${playerElements.length} player elements`);
            
            const apiConfigSection = await page.textContent('div:has-text("API Configuration")');
            console.log(`API Configuration section found: ${!!apiConfigSection}`);
            
            const aiControlsSection = await page.textContent('div:has-text("AI Controls")');
            console.log(`AI Controls section found: ${!!aiControlsSection}`);
            
            const gameModesSection = await page.textContent('div:has-text("Game Modes")');
            console.log(`Game Modes section found: ${!!gameModesSection}`);
            
            console.log('✅ All UI sections verified');
            process.exit(0);
          } catch (error) {
            console.error('❌ Test failed:', error);
            process.exit(1);
          } finally {
            await browser.close();
          }
        })();
        EOL
    
    - name: Run UI tests
      run: node ui-test.js
      
    - name: Stop HTTP server
      run: pkill -f http-server || true
